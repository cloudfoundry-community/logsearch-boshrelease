#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/parser/helpers/ctl_setup.sh 'parser'

function wait_for_template {
  local template_name="$1"
  local MASTER_URL="<%= p("logstash_parser.elasticsearch.data_hosts").first %>:9200"

  set +e
  while true;  do
    echo "Waiting for index template to be uploaded: $template_name"
    curl -X HEAD -f -i "$MASTER_URL"/_template/$template_name > /dev/null 2>&1
    [ $? ] && break
    sleep 5
  done
  set -e
  echo "Found $template_name"
}

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8
<% if 'auto' == p('logstash_parser.workers') %>
# 1 logstash worker / CPU core
export LOGSTASH_WORKERS=`grep -c ^processor /proc/cpuinfo`
<% else %>
export LOGSTASH_WORKERS=<%= p('logstash_parser.workers') %>
<% end %>
export TIMECOP_REJECT_GREATER_THAN_HOURS=<%= p('logstash_parser.timecop.reject_greater_than_hours') %>
export TIMECOP_REJECT_LESS_THAN_HOURS=<%= p('logstash_parser.timecop.reject_less_than_hours') %>
export HEAP_SIZE=$((( $( cat /proc/meminfo | grep MemTotal | awk '{ print $2 }' ) * 46 ) / 100 ))K
<% if_p('logstash.heap_size') do |heap_size| %>
HEAP_SIZE=<%= heap_size %>
<% end %>
export LS_JAVA_OPTS="-Xms$HEAP_SIZE -Xmx$HEAP_SIZE -Dlog4j.configurationFile=${JOB_DIR}/config/log4j2.properties"

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    <% p("logstash_parser.wait_for_templates").each do |template| %>
    wait_for_template "<%= template %>"
    <% end %>

    # store this processes pid in $PIDFILE, since the exec below doesn't daemonize
    echo $$ > $PIDFILE

    # construct a complete config file from all the fragments
    cat ${JOB_DIR}/config/input_and_output.conf > ${JOB_DIR}/config/logstash.conf

    # append deployment dictionary files
    <% p('logstash_parser.deployment_dictionary').each do |dictionary_path| %>
      cat "<%= dictionary_path %>" >> ${JOB_DIR}/config/deployment_lookup.yml
    <% end %>

    echo "filter {" >> ${JOB_DIR}/config/logstash.conf

    cat ${JOB_DIR}/config/filters_pre.conf >> ${JOB_DIR}/config/logstash.conf
    cat /var/vcap/packages/logsearch-config/logstash-filters-default.conf >> ${JOB_DIR}/config/logstash.conf

    <% if p('logstash_parser.filters').is_a? Array %>
      # logstash_parser.filters is a list of filter rules
      <% p('logstash_parser.filters').each do |filter| name, path = filter.first %>
        cat "<%= path %>" >> ${JOB_DIR}/config/logstash.conf
      <% end %>
    <% elsif p('logstash_parser.filters') != '' %>
      # logstash_parser.filters is a block of text, which we treat as logstash filter config
      cat ${JOB_DIR}/config/filters_override.conf >> ${JOB_DIR}/config/logstash.conf
    <% end %>

    cat ${JOB_DIR}/config/filters_post.conf >> ${JOB_DIR}/config/logstash.conf
    <% if p('logstash_parser.enable_json_filter') %>
      cat /var/vcap/packages/logsearch-config/if_it_looks_like_json.conf >> ${JOB_DIR}/config/logstash.conf
    <% end %>
    cat /var/vcap/packages/logsearch-config/timecop.conf >> ${JOB_DIR}/config/logstash.conf
    cat /var/vcap/packages/logsearch-config/deployment.conf >> ${JOB_DIR}/config/logstash.conf

    echo "} #close filters" >> ${JOB_DIR}/config/logstash.conf

    # Workaround for issue https://github.com/elastic/logstash/issues/6378 still present in version 5.2.2
    # Please remove ones logstash is in version 5.3.x or higher.
    mkdir -p $DATA_DIR/queue
    chmod -R 777 $DATA_DIR/queue
    rm -f /var/vcap/packages/logstash/data/queue
    ln -s $DATA_DIR/queue /var/vcap/packages/logstash/data/queue

    exec chpst -u vcap:vcap /var/vcap/packages/logstash/bin/logstash \
        --path.data ${DATA_DIR} \
        --path.config ${JOB_DIR}/config/logstash.conf \
        --path.logs ${LOG_DIR} \
        --pipeline.workers ${LOGSTASH_WORKERS} \
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE

    ;;
  *)
    echo "Usage: ingestor_syslog_ctl {start|stop}"

    ;;

esac
exit 0
