bootstrap.memory_lock: true

path.conf: "/var/vcap/jobs/elasticsearch/config"
path.logs: "/var/vcap/sys/log/elasticsearch"
path.data: "/var/vcap/store/elasticsearch"
path.scripts: "/var/vcap/data/elasticsearch/plugin-scripts"
<% if p('elasticsearch.path_repo') != '' %>
path.repo: ["<%= p('elasticsearch.path_repo') %>"]
<% end %>

<%
  cluster_name = nil
  if_link("elasticsearch") { |elasticsearch_link| cluster_name = elasticsearch_link.p("elasticsearch.cluster_name") }
  unless cluster_name
    cluster_name = p("elasticsearch.cluster_name")
  end
%>
cluster.name: "<%= cluster_name %>"

node.max_local_storage_nodes: 1
node.name: "<%= name %>/<%= index %>"
node.master: <%= p("elasticsearch.node.allow_master") %>
node.data: <%= p("elasticsearch.node.allow_data") %>
node.ingest: <%= p("elasticsearch.node.allow_ingest") %>
<% p("elasticsearch.node.tags", {}).each do | k, v | %>
node.attr.<%= k %>: "<%= v %>"
<% end %>

network.host: "0.0.0.0"
http.host: <%= p("elasticsearch.http_host") %>

<%
  minimum_master_nodes = p("elasticsearch.discovery.minimum_master_nodes")
  if minimum_master_nodes == "auto"
    masters = nil
    respond_to?(:if_link) && if_link('elasticsearch') do |elasticsearch|
      masters = link('elasticsearch').instances.length
    end.else do
      masters = p("elasticsearch.master_hosts").length
    end
    if masters % 2 == 0
      raise "Expected an odd number of masters; got #{masters}"
    end
    minimum_master_nodes = masters / 2 + 1
  end
%>

discovery.zen.minimum_master_nodes: <%= minimum_master_nodes %>

<%
  master_hosts = nil
  if_link("elasticsearch") { |elasticsearch_link| master_hosts = elasticsearch_link.instances.map {|e| e.address}.join(',') }
  unless master_hosts
    master_hosts = p("elasticsearch.master_hosts").join(',')
  end
%>
discovery.zen.ping.unicast.hosts: "<%= master_hosts %>"

<% if_p('elasticsearch.cloud.aws.access_key', 'elasticsearch.cloud.aws.secret_key') do %>
cloud:
  aws:
    protocol: <%= p('elasticsearch.cloud.aws.protocol') %>
    read_timeout: <%= p('elasticsearch.cloud.aws.read_timeout') %>
    access_key: <%= p('elasticsearch.cloud.aws.access_key') %>
    secret_key: <%= p('elasticsearch.cloud.aws.secret_key') %>
    <% if_p('elasticsearch.cloud.aws.region') do |region| %>region: <%= region %><% end %>
<% end %>

<% if_p('elasticsearch.config_options') do | v | %><%= v %><% end %>
