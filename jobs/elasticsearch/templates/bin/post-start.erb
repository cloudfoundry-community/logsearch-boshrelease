#!/bin/bash

set -e

<% if !p("elasticsearch.health.disable_post_start") %>

echo "Waiting <%= p("elasticsearch.health.connect_timeout") %>s for elasticsearch to accept connections..."
elapsed=0
until [ $elapsed -ge <%= p("elasticsearch.health.connect_timeout") %> ]
do
  nc -4 -z -v localhost 9200 2>&1 && break
  elapsed=$[$elapsed+<%= p("elasticsearch.health.connect_interval") %>]
  sleep <%= p("elasticsearch.health.connect_interval") %>
done

if [ "$elapsed" -ge "<%= p("elasticsearch.health.connect_timeout") %>" ]; then
   echo "ERROR: Cannot connect to elasticsearch. Exiting..."
   exit 1
fi

out=$(mktemp health-XXXXXX)
remaining=<%= p("elasticsearch.health.timeout") %>

until [ "${remaining}" -le 0 ]; do
  <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
  curl -sw '\n%{http_code}' localhost:9200/_cluster/health > ${out}
  <% else %>
  curl -sw '\n%{http_code}' localhost:9200/_cluster/health?local=true > ${out}
  <% end %>
  body=$(cat ${out} | head -n -1)
  status=$(cat ${out} | tail -n 1)
  echo "body: ${body}"
  echo "status: ${status}"
  <% if p("elasticsearch.node.allow_data") and not p("elasticsearch.node.allow_master") %>
  if [ ${status} = "200" ] && echo ${body} | grep '"status":"green"'; then
    break
  fi
  <% else %>
  if [ ${status} = "200" ]; then
    break
  fi
  <% end %>
  let remaining-=<%= p("elasticsearch.health.interval") %>
  sleep <%= p("elasticsearch.health.interval") %>
done

rm ${out}

if [ -z "${remaining}" ]; then
  echo "Node failed to join the cluster"
  exit 1
fi

<% if p("elasticsearch.node.allow_data") %>
curl -X PUT -s localhost:9200/_all/_settings \
  -d '{"settings": {"index.unassigned.node_left.delayed_timeout": "<%= p("elasticsearch.recovery.delay_allocation") %>"}}'
<% end %>

<% if p('elasticsearch.cloud.aws.bucket') != '' and p('elasticsearch.node.allow_master') and spec.bootstrap %>
curl -X PUT -s localhost:9200/_snapshot/<%= p('elasticsearch.snapshots.repository') %> \
  -d '{"type": "s3", "settings": {"bucket": "<%= p('elasticsearch.cloud.aws.bucket') %>"}}'
<% end %>

<% if p('elasticsearch.path_repo') != '' and p('elasticsearch.node.allow_master') and spec.bootstrap %>
curl -X PUT -s localhost:9200/_snapshot/<%= p('elasticsearch.snapshots.repository') %> \
  -d '{"type": "fs", "settings": {"location": "<%= p('elasticsearch.path_repo') %>/<%= p('elasticsearch.snapshots.repository') %>", "compress": true}}'
<% end %>

<% else %>

echo "Disable post start script property is set to <%= p("elasticsearch.health.disable_post_start") %>. Skipping post-start..."

<% end %>
