#!/bin/bash
<%
  if p("logstash_ingestor.watchdog.enable")
    p("logstash.plugins") << {"name" => "logstash-output-exec", "version" => "3.1.2"}
  end
%>

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

# Setup env vars and folders for the webapp_ctl script
source /var/vcap/jobs/archiver_syslog/helpers/ctl_setup.sh 'archiver_syslog'

export PORT=${PORT:-5000}
export LANG=en_US.UTF-8
<% if 'auto' == p('logstash_ingestor.workers') %>
# 1 logstash worker / CPU core
export LOGSTASH_WORKERS=`grep -c ^processor /proc/cpuinfo`
<% else %>
export LOGSTASH_WORKERS=<%= p('logstash_ingestor.workers') %>
<% end %>
export HEAP_SIZE=$((( $( cat /proc/meminfo | grep MemTotal | awk '{ print $2 }' ) * 46 ) / 100 ))K
<% if_p('logstash.heap_size') do |heap_size| %>
HEAP_SIZE=<%= heap_size %>
<% end %>
<% p("logstash.env").each do |env| %>
export <%= env.keys[0] %>="<%= env.values[0] %>"
<% end %>

case $1 in

  start)
    pid_guard $PIDFILE $JOB_NAME

    # store this processes pid in $PIDFILE, since the exec below doesn't daemonize
    echo $$ > $PIDFILE

    export LS_JAVA_OPTS="-Xms$HEAP_SIZE -Xmx$HEAP_SIZE -DPID=$$"

    <% p("logstash.plugins").each do |plugin| %>
    /var/vcap/packages/logstash/bin/logstash-plugin install \
      <%= plugin.except("name").map { |key, value| "--#{key}=#{value}" }.join(" ") %> \
      <%= plugin["name"] %>
    <% end %>

    # construct a complete config file from all the fragments
    cat ${JOB_DIR}/config/input_and_output.conf > ${JOB_DIR}/config/logstash.conf

    exec chpst -u vcap:vcap /var/vcap/packages/logstash/bin/logstash \
        --path.data ${STORE_DIR} \
        --path.config ${JOB_DIR}/config/logstash.conf \
        --path.settings ${JOB_DIR}/config \
        --pipeline.workers ${LOGSTASH_WORKERS} \
        --log.format=json --log.level=<%= p("logstash.log_level") %> \
         >>$LOG_DIR/$JOB_NAME.stdout.log \
         2>>$LOG_DIR/$JOB_NAME.stderr.log

    ;;

  stop)
    kill_and_wait $PIDFILE
    ensure_no_more_logstash

    ;;
  *)
    echo "Usage: archiver_syslog_ctl {start|stop}"

    ;;

esac
exit 0
