#!/bin/bash

set -ex

# Delete existing templates before uploading
URL=http://<%= p('elasticsearch_config.elasticsearch.host') %>:<%= p('elasticsearch_config.elasticsearch.port') %>
for template in $(curl -s ${URL}/_cat/templates | awk '{print $1}'); do
  if ! grep -qw ${template} <(echo "<%= p('elasticsearch_config.templates').map { |template| template.keys.first }.join(' ') %>"); then
    curl -XDELETE ${URL}/_template/${template}
  fi
done

<%
# Look ma, I'm writing Chef
require 'uri'

def put_to_es(url_stem_base, es_config, request_params = {})
  ret = []
  es_config = Array(es_config)
  es_config.each do |config|
    if config.is_a? Hash
      ckey, content = config.to_a.first
    else
      ckey = ''
      content = config
    end
    url_stem = "#{url_stem_base}/#{ckey}".chomp('/')

    if request_params.keys.any?
      params = URI.encode_www_form(request_params)
      url_stem << "?#{params}"
    end

    ret << "URL=http://#{p('elasticsearch_config.elasticsearch.host')}:#{p('elasticsearch_config.elasticsearch.port')}/#{url_stem}"
    if nil == content
     ret << 'curl -X DELETE "${URL}"'
    else
      if content.start_with? '/var/vcap'
        ret << "CONTENT_PATH=\"#{content}\""
      else
        ret << <<BASH
CONTENT_PATH=/tmp/elasticsearch_config-http_body.txt
cat <<EOF > $CONTENT_PATH
#{content}
EOF
BASH
      end

      ret << <<BASH
HTTP_CODE=$(curl -s -w '%{http_code}' -o /tmp/elasticsearch_config-response.txt -X PUT --data-binary @$CONTENT_PATH "$URL")

if grep --quiet "\"errors\":true" /tmp/elasticsearch_config-response.txt ; then
  cat /tmp/elasticsearch_config-response.txt > /dev/stderr
  exit $HTTP_CODE
fi

if [ "$HTTP_CODE" -le "300" ]; then
  cat /tmp/elasticsearch_config-response.txt
else
  cat /tmp/elasticsearch_config-response.txt > /dev/stderr
  exit $HTTP_CODE
fi
BASH
    end
  end #loop
  ret.join("\n")
end
%>

#
# wait for elasticsearch availability
#

until curl -f 'http://<%= p("elasticsearch_config.elasticsearch.host") %>:<%= p("elasticsearch_config.elasticsearch.port") %>/_cluster/health?wait_for_status=yellow&timeout=10m'; do :; done

#
# templates
#
<%= put_to_es('_template', p('elasticsearch_config.templates')) %>

#
# documents
#
<%= put_to_es('', p('elasticsearch_config.docs')) %>

#
# license
#
<% if_p("elasticsearch_config.license") do |license| %>
  <%= put_to_es('_license', license, acknowledge: true) %>
<% end %>
